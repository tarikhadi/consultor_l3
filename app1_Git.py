import streamlit as st
import openai
casos_de_uso = """"
cada caso de uso abaixo esta separado por um #

Empresa: Rabobank
Problema: Sem visibilidade clara sobre a emiss√£o de gases de efeito estufa dos clientes e opera√ß√µes.
Solu√ß√£o: Painel de monitoramento da pegada de carbono usando Power BI e SharePoint.
Tecnologias: Power BI, SharePoint
Retorno: Melhor gest√£o ambiental, benchmark entre clientes, fortalecimento da imagem sustent√°vel e atra√ß√£o de novos investidores‚Äã

#

Assa√≠ Atacadista
Empresa: Assa√≠ Atacadista
Problema: Alto volume de chamados ao RH sobre benef√≠cios, gerando sobrecarga.
Solu√ß√£o: Chatbot no Teams via Copilot Studio para responder d√∫vidas sobre benef√≠cios.
Tecnologias: Copilot Studio, Microsoft Teams, SharePoint
Retorno: Redu√ß√£o de chamados ao RH, aumento no uso dos benef√≠cios e maior agilidade para os colaboradores‚Äã

#

Embraer
Empresa: Embraer
Problema: Dificuldade de acesso r√°pido √†s normas cont√°beis IFRS para auditorias.
Solu√ß√£o: Chatbot no Teams usando Copilot Studio com base nos documentos oficiais.
Tecnologias: Copilot Studio, Microsoft Teams, SharePoint
Retorno: Maior conformidade cont√°bil, redu√ß√£o de riscos regulat√≥rios e agilidade em auditorias‚Äã

#

FIESC
Empresa: FIESC
Problema: Colaboradores tinham dificuldade para acessar informa√ß√µes do plano de sa√∫de.
Solu√ß√£o: Chatbot baseado em Azure OpenAI e AI Search para respostas instant√¢neas.
Tecnologias: Azure OpenAI, Azure AI Search, Power Automate, SharePoint
Retorno: Redu√ß√£o de liga√ß√µes ao RH, aumento do uso dos benef√≠cios e maior satisfa√ß√£o dos colaboradores‚Äã

#

Iguatemi
Empresa: Iguatemi
Problema: Dificuldade de acesso ao C√≥digo de √âtica por parte dos colaboradores.
Solu√ß√£o: Chatbot integrado ao Teams e WhatsApp utilizando Azure OpenAI.
Tecnologias: Azure OpenAI, Azure AI Search, Microsoft Teams, WhatsApp, Power Automate
Retorno: Acesso instant√¢neo ao C√≥digo de √âtica, aumento de conformidade interna e redu√ß√£o de d√∫vidas jur√≠dicas‚Äã

#

Localiza
Empresa: Localiza
Problema: Monitoramento manual dificultava a recupera√ß√£o de ve√≠culos furtados.
Solu√ß√£o: Aplicativo de IA Generativa com Copilot Studio, integrado ao GCP e Power Automate.
Tecnologias: Google Cloud Platform, Copilot Studio, Power Automate, Microsoft Teams
Retorno: Redu√ß√£o do tempo de recupera√ß√£o de ve√≠culos, aumento da efici√™ncia operacional e redu√ß√£o de perdas‚Äã

#

Iochpe-Maxion
Empresa: Iochpe-Maxion
Problema: Processo demorado para consultar normas cont√°beis e risco de erro em auditorias.
Solu√ß√£o: Copilot com Azure OpenAI e AI Search, integrado ao Teams para consultas r√°pidas.
Tecnologias: Azure OpenAI, Azure AI Search, Power Automate, SharePoint, Power BI
Retorno: Redu√ß√£o dr√°stica no tempo de consulta e auditoria, aumento da produtividade global e percep√ß√£o de inova√ß√£o

#

Novo Nordisk
Empresa: Novo Nordisk
Problema: Dificuldade em centralizar informa√ß√µes sobre reembolso de viagens.
Solu√ß√£o: Chatbot web usando OpenAI e Azure AI Search para acesso r√°pido √†s diretrizes.
Tecnologias: Azure Storage Account, Azure AI Search, OpenAI
Retorno: Agilidade no acesso √† informa√ß√£o, redu√ß√£o de erros nos reembolsos e al√≠vio da carga administrativa‚Äã

#

OceanPact
Empresa: OceanPact
Problema: Dificuldade para acessar rapidamente informa√ß√µes dos radares de navega√ß√£o.
Solu√ß√£o: Chatbot inteligente baseado em Azure OpenAI e AI Search com atualiza√ß√µes autom√°ticas.
Tecnologias: Azure OpenAI, Azure AI Search, Power Automate, SharePoint
Retorno: Redu√ß√£o de erros na opera√ß√£o, aumento de produtividade e melhoria na tomada de decis√£o em campo‚Äã

#

PUC Minas
Empresa: PUC Minas
Problema: Professores gastavam muito tempo criando quest√µes para avalia√ß√µes.
Solu√ß√£o: Chatbot no Teams usando Copilot Studio para gerar quest√µes automaticamente.
Tecnologias: Copilot Studio, Microsoft Teams, Microsoft Stream, SharePoint
Retorno: Redu√ß√£o de tempo na cria√ß√£o de provas, aumento da produtividade docente e padroniza√ß√£o da qualidade das avalia√ß√µes

#

Romagnole
Empresa: Romagnole Produtos El√©tricos S.A.
Problema: Dificuldade de acesso r√°pido aos manuais de instala√ß√£o, manuten√ß√£o e transporte de postes, impactando a produtividade e auditorias.
Solu√ß√£o: Chatbot de IA Generativa com Azure OpenAI e Azure AI Search para consulta instant√¢nea aos documentos t√©cnicos.
Tecnologias: Azure OpenAI, Azure AI Search, Power Automate, SharePoint
Retorno: Redu√ß√£o de erros nas opera√ß√µes, aumento da produtividade, acelera√ß√£o nos processos de instala√ß√£o, manuten√ß√£o e auditoria‚Äã
"""

import streamlit as st
import openai

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Consultor de IA da L3", page_icon="ü§ñ")

# T√≠tulo do aplicativo
st.title("Consultor de IA da L3")

# Inicializa a chave da API OpenAI
OPENAI_API_KEY = st.secrets["OPENAI_API_KEY"]
client = openai.OpenAI(api_key=OPENAI_API_KEY)
# Inicializa o hist√≥rico de mensagens no state
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "system", "content": (

f"""

### INSTRU√á√ïES (mensagem de sistema):

Voc√™ √© o **Consultor de IA da L3**, um especialista acolhedor e emp√°tico em solu√ß√µes de Intelig√™ncia Artificial. Seu objetivo √© **entender profundamente o problema** do cliente, **demonstrar empatia**, apresentar ideias claras e **usar apenas** os casos de uso que j√° existem na vari√°vel `{casos_de_uso}`. **N√£o invente nenhum outro exemplo.**

---

1. **Sauda√ß√£o calorosa**  
   ‚ÄúOl√°! Eu sou o Consultor de IA da L3. üòä Para come√ßarmos, poderia me contar qual √© o principal desafio que voc√™ enfrenta hoje?‚Äù

2. **Perguntas de aprofundamento (2‚Äì3 perguntas)**  
   - ‚ÄúEntendo. Como isso impacta o dia a dia da sua equipe?‚Äù  
   - ‚ÄúJ√° testaram alguma solu√ß√£o ou ferramenta antes? Como foi a experi√™ncia?‚Äù  
   - ‚ÄúVoc√™ identifica mais dificuldade em velocidade de dados, precis√£o ou acesso √† informa√ß√£o?‚Äù

3. **Empatia**  
   ‚ÄúObrigado por compartilhar. Imagino como esse desafio pode afetar suas opera√ß√µes.‚Äù

4. **Tr√™s sugest√µes de IA**  
   Apresente **antes** de qualquer caso de uso, em blocos separados:  
   - **Sugest√£o 1:** (‚Ä¶)  
   - **Sugest√£o 2:** (‚Ä¶)  
   - **Sugest√£o 3:** (‚Ä¶)

5. **Oferta de casos de uso**  
   ‚ÄúN√≥s da L3 j√° aplicamos projetos semelhantes. Posso compartilhar um ou dois exemplos reais que temos registrados?‚Äù

6. **Apresenta√ß√£o exclusiva de `{casos_de_uso}`**  
   - **Se o cliente disser ‚Äúsim‚Äù**, percorra **apenas** a lista em `{casos_de_uso}` e **filtre** todos os itens cujo ‚ÄúProblema‚Äù tenha rela√ß√£o com o que o cliente descreveu.  
   - Para cada item selecionado, mostre exatamente:  
     - **Empresa:** ‚Ä¶  
     - **Problema:** ‚Ä¶  
     - **Solu√ß√£o:** ‚Ä¶  
     - **Resultado:** ‚Ä¶  
   - **N√£o crie nem mencione** qualquer empresa ou caso que **n√£o** esteja em `{casos_de_uso}`.  

7. **A√ß√£o seguinte**  
   - Se apresentou ao menos um caso:  
     ‚Äú√ìtimo! Esses exemplos mostram nossa experi√™ncia. Para avan√ßarmos, posso anotar seu telefone e e-mail para que nosso time da L3 entre em contato com um plano detalhado?‚Äù  
   - Se **nenhum** caso de uso de `{casos_de_uso}` for semelhante:  
     ‚ÄúEntendi. N√£o temos um caso id√™ntico a este, mas podemos desenhar algo sob medida. Poderia me passar seu telefone e e-mail para que nossa equipe fale diretamente com voc√™?‚Äù

8. **D√∫vidas finais**  
   ‚ÄúMais alguma d√∫vida em que eu possa ajudar agora?‚Äù

9. **Encerramento caloroso**  
   ‚ÄúObrigado pelo seu tempo! N√≥s da L3 somos especialistas em IA pr√°ticas, seguras e inovadoras. Em breve entraremos em contato. Tenha um √≥timo dia!‚Äù

---

**Tom:**  
- **Acolhedor e emp√°tico**, mas com **autoridade t√©cnica**.  
- **Consultivo**, sem soar rob√≥tico.  
- **Sempre** utilize apenas os casos de uso de `{casos_de_uso}`; se n√£o houver semelhan√ßa, solicite contato.  

"""


        )},
        {"role": "assistant", "content": "Ol√°! Sou o consultor de IA da L3. Como posso ajudar voc√™ hoje com solu√ß√µes de intelig√™ncia artificial para sua empresa?"}
    ]

# Exibe o hist√≥rico de mensagens
for message in st.session_state.messages:
    if message["role"] != "system":  # N√£o exibe mensagens do sistema
        with st.chat_message(message["role"]):
            st.write(message["content"])

# Input do usu√°rio usando o componente de chat do Streamlit
if prompt := st.chat_input("Digite sua mensagem aqui..."):
    # Adiciona a mensagem do usu√°rio ao hist√≥rico
    st.session_state.messages.append({"role": "user", "content": prompt})
    
    # Exibe a mensagem do usu√°rio
    with st.chat_message("user"):
        st.write(prompt)
    
    # Gera resposta
    with st.chat_message("assistant"):
        response_placeholder = st.empty()
        
        # Chama a API OpenAI
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=st.session_state.messages,
            temperature=0.7,
        )
        
        # Obt√©m a resposta
        assistant_response = response.choices[0].message.content
        
        # Exibe a resposta
        response_placeholder.write(assistant_response)
    
    # Adiciona a resposta ao hist√≥rico
    st.session_state.messages.append({"role": "assistant", "content": assistant_response})